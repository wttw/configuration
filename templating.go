package main

import (
	"bytes"
	"embed"
	"github.com/Masterminds/sprig"
	"go/format"
	"text/template"
)

//go:embed *.tpl
var templateFiles embed.FS

var templates *template.Template

func Templates() (*template.Template, error) {
	if templates == nil {
		//sub, err := fs.Sub(templateFiles, "template")
		//if err != nil {
		//	return nil, err
		//}
		tpls, err := template.New("base").Funcs(sprig.HermeticTxtFuncMap()).ParseFS(templateFiles, "*.tpl")
		if err != nil {
			return nil, err
		}
		templates = tpls
	}
	return templates, nil
}

func RenderGoTemplate(name string, data interface{}) ([]byte, error) {
	var generated bytes.Buffer
	tpl, err := Templates()
	if err != nil {
		return nil, err
	}
	err = tpl.ExecuteTemplate(&generated, name, data)
	if err != nil {
		return nil, err
	}
	formatted, err := format.Source(generated.Bytes())
	if err != nil {
		return generated.Bytes(), err
	}
	return formatted, nil
}